= attributes_for @proposal do
  .panel-sub
    = header @dep_raw, true

  .panel-body
    = instance_field :database
    = instance_field :rabbitmq
    = instance_field :keystone
    = instance_field :glance
    = instance_field :cinder
    = instance_field :neutron

    - if defined? InteltxtService
      = instance_field :inteltxt
      = boolean_field :trusted_flavors

    = boolean_field :use_novnc

    %fieldset
      %legend
        = t(".scheduler_header")

      = float_field %w(scheduler ram_allocation_ratio)
      = float_field %w(scheduler cpu_allocation_ratio)

    %fieldset
      %legend
        = t(".live_migration_header")

      = boolean_field :use_migration
      = boolean_field :use_shared_instance_storage

    %fieldset
      %legend
        = t(".kvm_header")

      = boolean_field %w(kvm ksm_enabled)

    %fieldset
      %legend
        = t(".vmware_header")

      = string_field %w(vcenter host)
      = string_field %w(vcenter user)
      = password_field %w(vcenter password)
      = array_string_field %w(vcenter clusters)
      %span.help-block
        = t('.vmware_cluster_hint')
      = string_field %w(vcenter datastore)
      = string_field %w(vcenter interface)

    %fieldset
      %legend
        = t(".ssl_header")

      = boolean_field %w(ssl enabled), collection: :ssl_protocols_for_nova, data: { sslprefix: "ssl", sslcert: "/etc/nova/ssl/certs/signing_cert.pem", sslkey: "/etc/nova/ssl/private/signing_key.pem" }

      #ssl_container
        = boolean_field %w(ssl generate_certs)
        = string_field %w(ssl certfile)
        = string_field %w(ssl keyfile)
        = boolean_field %w(ssl insecure)
        = boolean_field %w(ssl cert_required), data: { enabler: "true", enabler_target: "#ssl_ca_certs" }
        = string_field %w(ssl ca_certs)

    %fieldset
      %legend
        = t(".novnc_ssl_header")

      = boolean_field %w(novnc ssl enabled), collection: :ssl_protocols_for_nova, data: { sslprefix: "novnc_ssl", sslcert: "", sslkey: "" }

      #novnc_ssl_container
        .alert.alert-info
          = t(".novnc_ssl_hint")
          
        = string_field %w(novnc ssl certfile)
        = string_field %w(novnc ssl keyfile)

    %fieldset
      %legend
        = t(".logging_header")

      = boolean_field :verbose

    = render "barclamp/git/pfsdeps"
