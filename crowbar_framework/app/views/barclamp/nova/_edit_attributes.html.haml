= attributes_for @proposal do
  .panel-sub
    = header @dep_raw, true

  .panel-body
    = instance_field :database
    = instance_field :rabbitmq
    = instance_field :keystone
    = instance_field :glance
    = instance_field :cinder
    = instance_field :neutron

    - if defined? InteltxtService
      = instance_field :inteltxt
      = boolean_field :trusted_flavors

    = boolean_field :use_novnc
    = boolean_field :auto_assign_floating_ip

    %fieldset
      %legend
        = t(".scheduler_header")

      = float_field %w(scheduler ram_allocation_ratio)
      = float_field %w(scheduler cpu_allocation_ratio)

    %fieldset
      %legend
        = t(".live_migration_header")

      = boolean_field :use_shared_instance_storage
      = boolean_field :use_migration

    %fieldset
      %legend
        = t(".kvm_header")

      = boolean_field %w(kvm ksm_enabled)

    %fieldset
      %legend
        = t(".ssl_header")

      = boolean_field %w(ssl enabled), :collection => :ssl_protocols_for_nova, "data-sslprefix" => "ssl", "data-sslcert" => "/etc/nova/ssl/certs/signing_cert.pem", "data-sslkey" => "/etc/nova/ssl/private/signing_key.pem"

      #ssl_container
        = boolean_field %w(ssl generate_certs)
        = string_field %w(ssl certfile)
        = string_field %w(ssl keyfile)
        = boolean_field %w(ssl insecure)
        = boolean_field %w(ssl cert_required), "data-enabler" => "true", "data-enabler-target" => "#ssl_ca_certs"
        = string_field %w(ssl ca_certs)

    %fieldset
      %legend
        = t(".novnc_ssl_header")

      = boolean_field %w(novnc ssl enabled), :collection => :ssl_protocols_for_nova, "data-sslprefix" => "novnc_ssl", "data-sslcert" => "", "data-sslkey" => ""

      #novnc_ssl_container
        .alert.alert-info
          = t(".novnc_ssl_hint")

        = string_field %w(novnc ssl certfile)
        = string_field %w(novnc ssl keyfile)

    %fieldset
      %legend
        = t(".logging_header")

      = boolean_field :verbose

    = render "barclamp/git/pfsdeps"
